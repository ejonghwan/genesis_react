{"version":3,"file":"static/js/428.d7e615fc.chunk.js","mappings":"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","sources":["components/main/carVisual/Sedan.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef } from 'react';\nimport { Swiper, SwiperSlide  } from 'swiper/react';\nimport { Navigation, Autoplay, EffectFade, Pagination  } from 'swiper/modules';\nimport 'swiper/scss';\nimport 'swiper/scss/navigation';\nimport 'swiper/scss/pagination';\nimport ClipAni from '../../../utils/ClipAni';\nimport Img from '../../common/image/Img';\n\n\n\nconst Sedan = ({ data }) => {\n\n  \n    const carWrapRef = useRef(null);\n    let cars = useRef(null);\n    let carImgs = useRef(null);\n    let colors = useRef(null);\n    let color_names = useRef(null);\n    let prev_el = useRef(null);\n  \n    const handleColorClick = (carData) => () => {\n        // if(prev_el) { prev_el.current.style.zIndex = 1; }\n        for(let i = 0; i < cars.current.length; i++) {\n            cars.current[i].classList.remove('on')\n            colors.current[i].classList.remove('on')\n            color_names.current[i].classList.remove('on')\n\n            if(carData === cars.current[i].dataset.car) {\n                cars.current[i].classList.add('on')\n                colors.current[i].classList.add('on')\n                color_names.current[i].classList.add('on')\n                \n                new ClipAni(carImgs.current[i], {\n                    limit: window.innerWidth,\n                    els: carImgs.current,\n                    prev_el: prev_el.current,\n                    duration: 300,\n                    callback: () => {\n                        prev_el.current = carImgs.current[i];\n                        // console.log('prevel?', prev_el.current)\n                    }\n                })\n                \n            }\n        }\n    } \n\n    useEffect(() => {\n        cars.current = carWrapRef.current?.querySelectorAll('.car')\n        carImgs.current = carWrapRef.current.querySelectorAll('.car_img')\n        colors.current = carWrapRef.current.querySelectorAll('.color')\n        color_names.current = carWrapRef.current.querySelectorAll('.color_name')\n        prev_el.current = carImgs.current[0];\n    }, [])\n\n\n    return (\n        <Fragment>\n            <Swiper \n                className=\"tab_sedan\" \n                modules={[ Navigation, Autoplay, EffectFade, Pagination ]} \n                navigation={true}\n                pagination={{\n                    type: 'progressbar',\n                  }}\n                effect={\"fade\"}\n                observer={true}\n                observeParents={true}\n                // autoplay={{ delay: 1500, disableOnInteraction: false }}\n                // loop={true}\n                ref={carWrapRef}\n                onSlideChange={(swi) => {\n                    swi.slides[swi.activeIndex].querySelector('.color_name').classList.add('on')\n                }}\n            >\n                {data.map((car, idx) => {\n                    return (\n                        <SwiperSlide key={idx}>\n                             <strong className=\"main_car_title\">{car.carName}</strong> \n                             <div className=\"main_car_info\">\n                                <div className=\"car_outer\">\n                                    {car.outerColor.map((color, idx) => {\n                                        return (\n                                            <Fragment key={idx}>\n                                                <div className=\"car_wrap\">\n                                                    {color.value.map((value, idx) => {\n                                                        return (\n                                                           \n                                                            <div className={`car ${idx === 0 && 'on'}`} data-car={`${car.carName}_${color.type}_${idx}`} key={idx}>\n                                                                 <Img \n                                                                    className=\"car_img\"\n                                                                    webpSrc={require(`../../../assets/images/car/${car.carName}/${value.car}.webp`)} \n                                                                    imageSrc={require(`../../../assets/images/car/${car.carName}/${value.car}.png`)} \n                                                                    alt={`${car.carName} ${value.colorName} 색 차량 이미지`}\n                                                                />\n                                                            </div>\n                                                        )\n                                                    })}\n                                                </div>\n                                            </Fragment>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"color_outer\">\n                                    {car.outerColor.map((color, idx) => {\n                                        return (\n                                            <Fragment key={idx}>\n                                                <p>{color.material}</p>\n                                                <div className=\"color_wrap\">\n                                                    {color.value.map((value, idx) => {\n                                                        return (\n                                                            <div key={idx}>\n                                                                <button type=\"button\" className={`color ${idx === 0 && color.type === 'u' && 'on'}`} data-color={`${car.carName}_${color.type}_${idx}`} onClick={handleColorClick(`${car.carName}_${color.type}_${idx}`)}>\n                                                                <Img \n                                                                    webpSrc={require(`../../../assets/images/car/${car.carName}/${value.color}.webp`)} \n                                                                    imageSrc={require(`../../../assets/images/car/${car.carName}/${value.color}.png`)} \n                                                                    alt={value.colorName} \n                                                                />\n                                                                </button>\n                                                            </div>\n                                                        )\n                                                    } )}\n                                                </div>\n                                                <div className=\"color_name_wrap\">\n                                                    {color.value.map((value, idx) => {\n                                                        return (\n                                                            <span className={`color_name ${idx === 0 && color.type === 'u' && 'on'}`} data-colorname={`${car.carName}_${color.type}_${idx}`} key={idx}>\n                                                                {value.colorName}\n                                                            </span>\n                                                        )\n                                                    } )}\n                                                </div>\n                                            </Fragment>\n                                        )\n                                        \n                                    })}\n                                </div>\n\n                             </div>\n\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n        </Fragment>\n    );\n};\n\nexport default Sedan;"],"names":["_ref","data","carWrapRef","useRef","cars","carImgs","colors","color_names","prev_el","useEffect","_carWrapRef$current","current","querySelectorAll","_jsx","Fragment","children","Swiper","className","modules","Navigation","Autoplay","EffectFade","Pagination","navigation","pagination","type","effect","observer","observeParents","ref","onSlideChange","swi","slides","activeIndex","querySelector","classList","add","map","car","idx","_jsxs","SwiperSlide","carName","outerColor","color","value","concat","Img","webpSrc","require","imageSrc","alt","colorName","material","onClick","carData","_loop","i","remove","dataset","ClipAni","limit","window","innerWidth","els","duration","callback","length"],"sourceRoot":""}